{"version":3,"sources":["webpack:///./src/components/Home/Home.tsx","webpack:///./src/store/reducer/pizza-maker.reducer.tsx"],"names":[],"mappings":"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","file":"main.95030956dca196a701c5.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Button} from 'reactstrap'\n\nimport './Home.scss'\nimport { mapStateToProps, mapDispatchToProps } from '../../store/actions/pizza.actions';\nimport { Link } from 'react-router-dom';\nimport Pizza from '../Pizza/Pizza';\nimport { InitialState, IPizzaProps, IPizzaToppings, IPizza } from '../../models/store.model';\n\n\n@connect(mapStateToProps, mapDispatchToProps)\nexport default class Home extends Component<InitialState, IPizzaProps> {\n   \n    private getToppings(toppings: IPizzaToppings[]): IPizzaToppings[] {\n        return toppings.filter((topping: IPizzaToppings) => topping.isAdded === true)\n    }\n\n    private handleSetSelectedPizza(index: number): void {\n        \n    }\n\n    render() {\n        return (\n            <div className=\"Pizza__Enclosure\">\n                {\n                    this.props.pizzaRecipes.map((pizza: IPizza, index: number) => (\n                        <div key={index} className=\"Pizza__Enclosure-Item\">\n                            <div className=\"Item__Image\">\n                                <Pizza toppings={this.getToppings(pizza.Toppings)}></Pizza>\n                            </div>\n                            <div className=\"Item__Title\">\n                                {pizza.Name}\n                            </div>\n                            <div className=\"Item__Action\">\n                                <Button onClick={() => this.handleSetSelectedPizza(index)} tag={Link} to={`/edit/${index}`} color=\"info\">View pizza</Button>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    public setPizzaView(): JSX.Element[] {\n        return this.props.pizzas.map((pizza: any, index: number) => (\n            <div key={index} className=\"Pizza__Enclosure-Item\">\n                <div className=\"Item__Image\">\n\n                </div>\n                <div className=\"Item__Title\">\n                    { pizza.Name }\n                </div>\n                <div className=\"Item__Action\">\n                    <Button tag={Link} to={`/edit/${index}`} color=\"info\">View pizza</Button>\n                </div>\n            </div>\n        ))\n    } \n\n    public setDefaultView(): JSX.Element[] {\n        return Array.from({ length: 10 }, (_, value) => {\n            return (\n                <div key={value} className=\"Pizza__Enclosure-Item\">\n                    <div className=\"Item__Image\">\n\n                    </div>\n                    <div className=\"Item__Title\">\n                        Pizza # {value}\n                    </div>\n                    {/* <div className=\"Item__Action\">\n                        <Button tag={Link} to={`/edit/${value}`} color=\"info\">View pizza</Button>\n                    </div> */}\n                </div>\n            )\n        })\n    }\n}\n","import { SET_PIZZA_RECIPES, SET_SELECTED_PIZZA, ADD_TOPPING } from \"../types/action.types\"\nimport { InitialState, IPizza } from \"../../models/store.model\"\nimport { setPizzaRecipesAction } from '../actions/pizza.actions'\nimport { createReducer, createSlice } from '@reduxjs/toolkit'\nexport const initialState: InitialState = {\n    customerInfo: null,\n    pizzaRecipes: [],\n    selectedPizza: null,\n    router: null\n}\n\nconst pizzaSlice = createSlice({\n    name: 'pizzaRecipes',\n    initialState: initialState,\n    reducers: {\n        addPizzaRecipes(state, action) {\n            const { pizzaRecipes } = action.payload\n            state.pizzaRecipes.push(pizzaRecipes)\n        },\n        updateIngredientState(state, action) {\n            const { pizzaKey, toppingKey } = action.payload\n            let isAdded = state.pizzas[pizzaKey].Toppings[toppingKey].isAdded\n            isAdded = !isAdded // push({ isAdded: !state[pizzaKey].Toppings[toppingKey].isAdded })\n        }\n    }\n})\n\n\n// const actionsMap = {\n//     [setPizzaRecipesAction.type]: (state: InitialState[]) => {\n//         state\n//     }\n// }\n\nexport const { updateIngredientState, addPizzaRecipes } = pizzaSlice.actions\n\nexport default pizzaSlice.reducer\n\n// const pizzaMakerReducerFn = createReducer(0, actionsMap)\n\nexport function pizzaMakerReducer(state = initialState, action) {\n    switch(action.type) {\n\n        case SET_PIZZA_RECIPES: {\n            return {\n                ...state,\n                pizzas: action.pizzas\n            }\n        }\n\n        case SET_SELECTED_PIZZA: {\n            return {\n                ...state,\n                selectedPizza: state.pizzas[action.key]\n            }\n        }\n\n        case ADD_TOPPING: {\n            \n            return state\n\n        }\n\n        default: {\n            return state\n        }\n\n    }\n}"],"sourceRoot":""}