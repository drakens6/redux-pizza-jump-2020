{"version":3,"sources":["webpack:///./src/store/reducer/pizza-maker.reducer.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGO,IAAM,YAAY,GAAiB;AACtC,cAAY,EAAE,IADwB;AAEtC,QAAM,EAAE,EAF8B;AAGtC,eAAa,EAAE;AACX,MAAE,EAAE,EADO;AAEX,QAAI,EAAE,EAFK;AAGX,SAAK,EAAE,CAHI;AAIX,YAAQ,EAAE;AAJC,GAHuB;AAStC,QAAM,EAAE;AAT8B,CAAnC;AAYD,SAAU,iBAAV,CAA4B,KAA5B,EAAkD,MAAlD,EAAwD;AAA5B;AAAA;AAAoB;;AAClD,UAAO,MAAM,CAAC,IAAd;AAEI,SAAK,qEAAL;AAAwB;AACpB,qCACO,KADP,GACY;AACR,gBAAM,EAAE,MAAM,CAAC;AADP,SADZ;AAIH;;AAED,SAAK,0BAAL;AAAiC;AAC7B,YAAM,IAAI,GAAG,MAAM,CAAC,OAAP,CAAe,QAAf,CAAwB,QAArC;AACA,YAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAnB;;AAEA,YAAI,KAAK,CAAC,EAAD,CAAT,EAAe;AACX,8BACO,KADP;AAGH;;AAED,qCACO,KADP,GACY;AACR,uBAAa,EAAE,KAAK,CAAC,MAAN,CAAa,EAAb;AADP,SADZ;AAIH;;AAED,SAAK,sEAAL;AAAyB;AACrB,qCACO,KADP,GACY;AACR,uBAAa,EAAE,KAAK,CAAC,MAAN,CAAa,MAAM,CAAC,GAApB;AADP,SADZ;AAIH;;AAED,SAAK,+DAAL;AAAkB;AACd,YAAM,SAAS,GAAG,KAAK,CAAC,aAAxB;AAEA,YAAM,OAAO,GAAG,CAAC,SAAS,CAAC,QAAV,CAAmB,MAAM,CAAC,UAA1B,EAAsC,OAAvD;;AACA,YAAM,OAAO,yBAAQ,SAAS,CAAC,QAAV,CAAmB,MAAM,CAAC,UAA1B,CAAR,GAA6C;AAAE,iBAAO,EAAE;AAAX,SAA7C,CAAb;;AAEA,iBAAS,CAAC,QAAV,CAAmB,MAAnB,CAA0B,MAAM,CAAC,UAAjC,EAA6C,CAA7C,EAAgD,OAAhD;;AAEA,YAAM,MAAM,yBACL,KADK,GACA;AACR,uBAAa,wBACN,SADM,GAEN,SAAS,CAAC,QAFJ;AADL,SADA,CAAZ;;AAQA,eAAO,MAAP;AAEH;;AAED;AAAS;AACL,eAAO,KAAP;AACH;AAtDL;AAyDH,C","file":"main.0aa65ba5b06e1cf9f686.hot-update.js","sourcesContent":["import { SET_PIZZA_RECIPES, SET_SELECTED_PIZZA, ADD_TOPPING } from \"../types/action.types\"\nimport { InitialState, IPizza } from \"../../models/store.model\"\nimport { createReducer, createSlice } from '@reduxjs/toolkit'\nexport const initialState: InitialState = {\n    customerInfo: null,\n    pizzas: [],\n    selectedPizza: {\n        id: \"\",\n        Name: \"\",\n        Price: 0,\n        Toppings: []\n    },\n    router: null\n}\n\nexport function pizzaMakerReducer(state = initialState, action) {\n    switch(action.type) {\n\n        case SET_PIZZA_RECIPES: {\n            return {\n                ...state,\n                pizzas: action.pizzas\n            }\n        }\n\n        case \"@@router/LOCATION_CHANGE\": {\n            const path = action.payload.location.pathname as string\n            const id = parseInt(path.split('/')[2])\n            \n            if (isNaN(id)) {\n                return {\n                    ...state\n                }\n            }\n\n            return {\n                ...state,\n                selectedPizza: state.pizzas[id]\n            }\n        }\n\n        case SET_SELECTED_PIZZA: {\n            return {\n                ...state,\n                selectedPizza: state.pizzas[action.key]\n            }\n        }\n\n        case ADD_TOPPING: {\n            const selection = state.selectedPizza\n\n            const isAdded = !selection.Toppings[action.toppingKey].isAdded\n            const topping = { ...selection.Toppings[action.toppingKey], isAdded: isAdded }\n\n            selection.Toppings.splice(action.toppingKey, 1, topping)\n\n            const result = {\n                ...state,\n                selectedPizza: {\n                    ...selection,\n                    ...selection.Toppings\n                }\n            }\n\n            return result\n\n        }\n\n        default: {\n            return state\n        }\n\n    }\n}"],"sourceRoot":""}